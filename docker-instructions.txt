# From a rocky image

# install basic docker/podman components
sudo dnf install docker git podman-compose

# Setup podman to restart any running containers after reboot
sudo systemctl enable podman-restart.service
sudo systemctl start podman-restart.service

# May need to use an ssh git address if you plan to commit to the repo
git clone https://github.com/TACC/hpcperfstats.git 
cd hpcperfstats
git checkout master

# In service-conf, nginx.conf needs to be chosen, to make things easier for development, use the nossl config, if its production use the ssl version, you can copy the nginx-nossl.conf to nginx.conf and build:
cp services-conf/nginx-nossl.conf services-conf/nginx.conf


# Copy the example supervisord.conf - this contains scripts that will do site-specific data transfer. In the example it is commenented out. See the file for more details.
cp services-conf/supervisord.conf.example services-conf/supervisord.conf


# Copy the docker compose file and make the changes below
cp docker-compose.yaml.example docker-compose.yaml

# - Please change all the paths in the docker-compose.yml file to your paths 
#        - Under pipeline -> volumes - change the path to the ssh keys. It doesn't have to be a user's, it just has to be a .ssh directory. 
#        - Under volumes -> hpcperfstatsdata -> device - change the path to your path with the correct username and directory name for your data.
#        - Under volumes -> hpcperfstatsnodelog -> device - change the path to your path with the correct username and directory name for your data.


# - You will need to create the hpcperfstatsdata and hpcperfstatslog directories, they can go anywhere on the host.
sudo mkdir -p /opt/hpcperfstats_data
sudo mkdir -p /opt/hpcperfstats_log

# Copy the hpcperfstats.ini and make the changes below
cp hpcperfstats.ini.example hpcperfstats.ini

 # - Please change the hpcperfstats.ini file contents to your configurations
 #       - Under [DEFAULT] -> machine - change the machine name to that of your cluster.
 #       - Under [DEFAULT] -> host_name_ext - change it to the FQDN of your cluster.
 #       - Under [DEFAULT] -> server - change it to the FQDN for your web server host.

# Create paths for data and log directories:

# Build:
sudo docker compose up --build -d

# To see the startup
sudo docker compose logs 

#you should be able to get to the website at this point, will error if no data
#
#
# USEFUL COMMANDS
#
# ACCESS the DB
# docker exec -it hpcperfstats_db_1 psql -h localhost -U hpcperfstats
#
# ACCESS the Pipeline (where data is stored)
#  docker exec -it hpcperfstats_pipeline_1 su hpcperfstats
#

